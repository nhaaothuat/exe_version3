import React, { useState } from "react";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { Textarea } from "@/components/ui/textarea";
import { doc, setDoc } from "firebase/firestore";
import { data } from "../../../src/utility/firebase";
import { v4 } from "uuid";
import { toast, ToastContainer } from "react-toastify";
import { AiOutlineLoading } from "react-icons/ai";

const Tutor = () => {
  const [name, setName] = useState("");
  const [email, setEmail] = useState("");
  const [subject, setSubject] = useState("");
  const [university, setUniversity] = useState("");
  const [current, setCurrent] = useState("");
  const [phone, setPhone] = useState("");
  const [mess, setMess] = useState("");
  const [loading, setLoading] = useState(false);

  const saveContactToFirestore = async (tutorData) => {
    const tutorId = v4();
    await setDoc(doc(data, "tutor", tutorId), tutorData);
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setLoading(true);
    try {
      const contactData = {
        name,
        email,
        subject,
        phone,
        current,
        university,
        mess,
        createdAt: new Date(),
      };

      await saveContactToFirestore(contactData);

      setName("");
      setEmail("");
      setSubject("");
      setCurrent("");
      setUniversity("");
      setPhone("");
      setMess("");

      toast.success("B∆∞·ªõc ƒë·∫ßu gia nh·∫≠p StarHub th√†nh c√¥ng!");
    } catch (error) {
      toast.error("Ch√∫c b·∫°n may m·∫Øn l·∫ßn sau!");
      console.log(error);
      setLoading(false);
    } finally {
      setLoading(false); // ƒê·∫£m b·∫£o ƒë·∫∑t l·∫°i loading v·ªÅ false
    }
  };

  return (
    <>
      {/* Banner */}

      <div className="relative">
        <div className="absolute inset-0 bg-white bg-opacity-50 flex flex-col justify-center items-center text-center">
          <span className="text-lg md:text-xl text-black"></span>
          <h1 className="text-3xl md:text-5xl font-bold text-black">
            B·∫°n Mu·ªën Tr·ªü Th√†nh Gia S∆∞?
          </h1>
        </div>
        <img
          src="https://channel.mediacdn.vn/428462621602512896/2023/7/14/photo-1-1689302121228313858070.jpg"
          alt=""
          className="w-full h-48 md:h-64 object-cover"
        />
      </div>

      {/*End  */}

      <section className="bg-gray-100">
        <div className="mx-auto max-w-screen-xl px-4 py-16 sm:px-6 lg:px-8">
          <div className="grid grid-cols-1 gap-x-16 gap-y-8 lg:grid-cols-5">
            <div className="lg:col-span-2 lg:py-12">
              <p className="max-w-xl text-lg">
                Vi·ªác tr·ªü th√†nh gia s∆∞ kh√¥ng ch·ªâ gi√∫p b·∫°n ki·∫øm th√™m thu nh·∫≠p m√†
                c√≤n l√† c∆° h·ªôi ƒë·ªÉ chia s·∫ª ki·∫øn th·ª©c v√† kinh nghi·ªám c·ªßa m√¨nh.
                STARHUB s·∫Ω l√† n∆°i gi√∫p b·∫£n tr·ªü n√™n m·ªôt phi√™n b·∫£n ho√†n to√†n m·ªõi
                c·ªßa ch√≠nh b·∫£n th√¢n m√¨nh. V·∫≠y n√™n h√£y nhanh ch√≥ng ƒëƒÉng k√≠ v√† ƒë·ªìng
                h√†nh c√πng ch√∫ng t√¥i! ‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è
              </p>

              <div className="mt-8">
                <a href="#" className="text-2xl font-bold text-pink-600">
                  {" "}
                  üìû+84: 085 342 6516{" "}
                </a>

                <address className="mt-2 not-italic">
                  üìåƒê·ªãa ch·ªâ: R639+HM2, Khu ƒë√¥ th·ªã m·ªõi, Th√†nh ph·ªë Qui Nh∆°n, B√¨nh
                  ƒê·ªãnh 55117
                </address>
              </div>
            </div>

            <div className="rounded-lg bg-white p-8 shadow-lg lg:col-span-3 lg:p-12">
              <form action="#" className="space-y-4" onSubmit={handleSubmit}>
                <div>
                  {/* <Label className="sr-only" htmlFor="email">Email</Label> */}
                  <Input
                    type="text"
                    id="name"
                    placeholder="H·ªç v√† t√™n"
                    className="w-full rounded-lg  p-3 text-sm"
                    value={name}
                    onChange={(e) => setName(e.target.value)}
                    required
                  />
                </div>

                <div className="grid grid-cols-1 gap-4 sm:grid-cols-2">
                  <div>
                    <Input
                      type="email"
                      id="email"
                      placeholder="Email "
                      className="w-full rounded-lg  p-3 text-sm"
                      value={email}
                      onChange={(e) => setEmail(e.target.value)}
                      required
                    />
                  </div>

                  <div>
                    <Input
                      type="tel"
                      id="phone"
                      placeholder="S·ªë ƒëi·ªán tho·∫°i "
                      className="w-full rounded-lg  p-3 text-sm"
                      value={phone}
                      onChange={(e) => setPhone(e.target.value)}
                      required
                    />
                  </div>
                </div>

                <div>
                  <Input
                    type="text"
                    id="name"
                    placeholder="Tr∆∞·ªùng ƒê·∫°i h·ªçc"
                    className="w-full rounded-lg  p-3 text-sm"
                    value={university}
                    onChange={(e) => setUniversity(e.target.value)}
                    required
                  />
                </div>
                <div className="grid grid-cols-1 gap-4 sm:grid-cols-2">
                  <div>
                    <Input
                      type="text"
                      id="subject"
                      placeholder="M√¥n d·∫°y"
                      className="w-full rounded-lg  p-3 text-sm"
                      value={subject}
                      onChange={(e) => setSubject(e.target.value)}
                      required
                    />
                  </div>

                  <div>
                    <Select value={current} onValueChange={setCurrent}>
                      <SelectTrigger className=" w-full rounded-lg border-gray-200 p-3 text-sm">
                        <SelectValue
                          placeholder="T√¨nh tr·∫°ng"
                          type="graduate"
                          id="graduate"
                        />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="ƒê√£ t·ªët nghi·ªáp">
                          ƒê√£ t·ªët nghi·ªáp
                        </SelectItem>
                        <SelectItem value="Chu·∫©n b·ªã t·ªët nghi·ªáp">
                          Chu·∫©n b·ªã t·ªët nghi·ªáp
                        </SelectItem>
                        <SelectItem value="NƒÉm 1">NƒÉm 1</SelectItem>
                        <SelectItem value="NƒÉm 2">NƒÉm 2</SelectItem>
                        <SelectItem value="NƒÉm 3">NƒÉm 3</SelectItem>
                        <SelectItem value="NƒÉm 4">NƒÉm 4</SelectItem>
                        <SelectItem value="N/A">N/A</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>
                </div>

                <div>
                  <Textarea
                    rows="8"
                    placeholder="Nh·∫≠p tin nh·∫Øn c·ªßa b·∫°n ·ªü ƒë√¢y."
                    className="w-full rounded-lg  p-3 text-sm"
                    value={mess}
                    onChange={(e) => setMess(e.target.value)}
                    required
                  />
                </div>

                <div className="mt-4">
                  <Button
                    variant="outline"
                    className=" w-full rounded-lg  px-4 py-3 font-medium text-black sm:w-auto"
                    disabled={loading}
                  >
                    {loading ? (
                      <AiOutlineLoading className="animate-spin text-2xl mx-auto" />
                    ) : (
                      "G·ª≠i ƒëi"
                    )}
                  </Button>
                  <ToastContainer />
                </div>
              </form>
            </div>
          </div>
        </div>
      </section>
    </>
  );
};

export default Tutor;
